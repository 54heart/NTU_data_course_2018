{
if ( ent[i] == ans[j])
{
b <- b+1
}
}
}
cat(a,"A", b ,"B")
if(a == 4)
{
cat("猜對了!")
break
}
}
scan()
scan()
ans<-sample(0:9,4)
cat("請輸入四個數字")
x<-scan()
help("commandArgs")
x<-commandArgs()
x222
x<-commandArgs()
x
help("readline")
x<-1234
y<-unlist(strshplit(as.character(x),""))
y<-unlist(strsplit(as.character(x),""))
y
y[2]
y<-unlist(strsplit(as.numeric(x),""))
x<-1234
y<-unlist(strsplit(as.character(x),""))
guess_num<-as.numeric(y)
guess_num
guess_num[2]
x<-readline("請輸入四個數字 ")
x
y
y[1]==y[2]
x<-readline("請輸入四個數字 ")
if((class(x)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
}
x<-readline("請輸入四個數字 ")
if((class(x)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
}
else{
print("Good")
x<-readline("請輸入四個數字 ")
y<-unlist(strshplit(as.character(x),""))
if((class(x)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
}
else{
print("Good")
}
y
x
x<-readline("請輸入四個數字 ")
y
x<-readline("請輸入四個數字 ")
x<-readline("請輸入四個數字\n")
x
y
y<-unlist(strshplit(as.character(x),""))
y<-unlist(strsplit(as.character(x),""))
y
x<-readline("請輸入四個數字\n")
ans<-sample(0:9,4)
guess<-function(){
x<-readline("請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
if((class(x)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
}
else {
print("OK")
}
}
function(){
x<-readline("請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
if((class(x)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
}
else {
print("OK")
}
}
function(){
x<-readline("請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
if((class(x)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
}
else {
print("OK")
}
}
1234
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
ans
guess
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
while(guess!=ans){
x<-readline(prompt = "請輸入四個數字\n")
}
x
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
while(guess!=ans){
x<-readline(prompt = "請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
if((class(x)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
}
else {
print("OK")
}
}
x
y
guess<-as.numeric(y)
guess
guess<-as.numeric(abcd)
guess<-as.numeric("a")
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
while(all(guess==ans)==F){
x<-readline(prompt = "請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
guess<-as.numeric(y)
if((class(guess)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR 請再輸入一次")
next
}
else {
print("OK")
}
ans
ans
guess
all(guess==ans)
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
while(all(guess==ans)==F){
x<-readline(prompt = "請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
guess<-as.numeric(y)
if((class(guess)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR 請再輸入一次")
next
}
else {
print("OK")
}
}
ans
guess
guess<-c(2,3,4,5)
guess
ans==guess
as.numeric(ans==guess)
sum(c(0,0,1,0))
sum(0,0,2,1)
sum(guess==ans)
1==ans
guess[i]==ans[1]
guess[1]==ans[1]+guess[2]==ans[2]
guess==ans
cat("恭喜答對！共猜了",n,"次")
n<-0
cat("恭喜答對！共猜了",n,"次")
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
n<-0
while(all(guess==ans)==F){
x<-readline(prompt = "請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
guess<-as.numeric(y)
if((class(guess)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
next
}
else if(all(guess==ans)==T){
n<-n+1
cat("恭喜答對！共猜了",n,"次")
}
else{
a<-sum(guess==ans)
b<-0
for(i in 1:4){
if((guess[i]!=ans[i])&&((guess[i]-ans[1])*(guess[i]-ans[2])*(guess[i]-ans[3])*(guess[i]-ans[4])!=0)){
b<-b+1
}
cat(a,"A",b,"B")
n<-n+1
}
}
}
ans<-sample(0:9,4)
# 猜數字遊戲
# 基本功能
# 1. 請寫一個由"電腦隨機產生"不同數字的四位數(1A2B遊戲)
# 2. 玩家可"重覆"猜電腦所產生的數字，並提示猜測的結果(EX:1A2B)
# 3. 一旦猜對，系統可自動計算玩家猜測的次數
# 額外功能：每次玩家輸入完四個數字後，檢查玩家的輸入是否正確(錯誤檢查)
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
n<-0
while(all(guess==ans)==F){
x<-readline(prompt = "請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
guess<-as.numeric(y)
if((class(guess)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
next
}
else if(all(guess==ans)==T){
n<-n+1
cat("恭喜答對！共猜了",n,"次")
}
else{
a<-sum(guess==ans)
b<-0
for(i in 1:4){
if((guess[i]!=ans[i])&&((guess[i]-ans[1])*(guess[i]-ans[2])*(guess[i]-ans[3])*(guess[i]-ans[4])!=0)){
b<-b+1
}
cat(a,"A",b,"B")
n<-n+1
}
}
}
a<-sum(guess==ans)
b<-0
for(i in 1:4){
if((guess[i]!=ans[i])&&((guess[i]-ans[1])*(guess[i]-ans[2])*(guess[i]-ans[3])*(guess[i]-ans[4])!=0)){
b<-b+1
}
cat(a,"A",b,"B")
guess
guess
guess<-c(2,3,4,5)
ans
a<-sum(guess==ans)
b<-0
for(i in 1:4){
if((guess[i]!=ans[i])&&((guess[i]-ans[1])*(guess[i]-ans[2])*(guess[i]-ans[3])*(guess[i]-ans[4])!=0)){
b<-b+1
}
cat(a,"A",b,"B")
a<-sum(guess==ans)
b<-0
for(i in 1:4){
if((guess[i]!=ans[i])&&((guess[i]-ans[1])*(guess[i]-ans[2])*(guess[i]-ans[3])*(guess[i]-ans[4])==0)){
b<-b+1
}
}
cat(a,"A",b,"B")
n<-n+1
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
n<-0
while(all(guess==ans)==F){
x<-readline(prompt = "請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
guess<-as.numeric(y)
if((class(guess)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
next
}
else if(all(guess==ans)==T){
n<-n+1
cat("恭喜答對！共猜了",n,"次")
}
else{
a<-sum(guess==ans)
b<-0
for(i in 1:4){
if((guess[i]!=ans[i])&&((guess[i]-ans[1])*(guess[i]-ans[2])*(guess[i]-ans[3])*(guess[i]-ans[4])==0)){
b<-b+1
}
}
cat(a,"A",b,"B")
n<-n+1
}
}
# 猜數字遊戲
# 基本功能
# 1. 請寫一個由"電腦隨機產生"不同數字的四位數(1A2B遊戲)
# 2. 玩家可"重覆"猜電腦所產生的數字，並提示猜測的結果(EX:1A2B)
# 3. 一旦猜對，系統可自動計算玩家猜測的次數
# 額外功能：每次玩家輸入完四個數字後，檢查玩家的輸入是否正確(錯誤檢查)
ans<-sample(0:9,4)
cat("題目出好了，開始猜吧！")
guess<-c(0,0,0,0)
n<-0
while(all(guess==ans)==F){
x<-readline(prompt = "請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
guess<-as.numeric(y)
if((class(guess)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ")
next
}
else if(all(guess==ans)==T){
n<-n+1
cat("恭喜答對！共猜了",n,"次")
}
else{
a<-sum(guess==ans)
b<-0
for(i in 1:4){
if((guess[i]!=ans[i])&&((guess[i]-ans[1])*(guess[i]-ans[2])*(guess[i]-ans[3])*(guess[i]-ans[4])==0)){
b<-b+1
}
}
cat(a,"A",b,"B")
n<-n+1
}
}
# 猜數字遊戲
# 基本功能
# 1. 請寫一個由"電腦隨機產生"不同數字的四位數(1A2B遊戲)
# 2. 玩家可"重覆"猜電腦所產生的數字，並提示猜測的結果(EX:1A2B)
# 3. 一旦猜對，系統可自動計算玩家猜測的次數
# 額外功能：每次玩家輸入完四個數字後，檢查玩家的輸入是否正確(錯誤檢查)
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
n<-0
while(all(guess==ans)==F){
x<-readline(prompt = "請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
guess<-as.numeric(y)
if((class(guess)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ，請輸入四個不同數字")
next
}
else if(all(guess==ans)==T){
n<-n+1
cat("恭喜答對！共猜了",n,"次")
}
else{
a<-sum(guess==ans)
b<-0
for(i in 1:4){
if((guess[i]!=ans[i])&&((guess[i]-ans[1])*(guess[i]-ans[2])*(guess[i]-ans[3])*(guess[i]-ans[4])==0)){
b<-b+1
}
}
cat(a,"A",b,"B")
n<-n+1
}
}
ans
ans<-sample(0:9,4)
ans
# 猜數字遊戲
# 基本功能
# 1. 請寫一個由"電腦隨機產生"不同數字的四位數(1A2B遊戲)
# 2. 玩家可"重覆"猜電腦所產生的數字，並提示猜測的結果(EX:1A2B)
# 3. 一旦猜對，系統可自動計算玩家猜測的次數
# 額外功能：每次玩家輸入完四個數字後，檢查玩家的輸入是否正確(錯誤檢查)
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
n<-0
while(all(guess==ans)==F){
x<-readline(prompt = "請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
guess<-as.numeric(y)
if((class(guess)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ，請輸入四個不同數字")
next
}
else if(all(guess==ans)==T){
n<-n+1
cat("恭喜答對！共猜了",n,"次")
}
else{
a<-sum(guess==ans)
b<-0
for(i in 1:4){
if((guess[i]!=ans[i])&&((guess[i]-ans[1])*(guess[i]-ans[2])*(guess[i]-ans[3])*(guess[i]-ans[4])==0)){
b<-b+1
}
}
cat(a,"A",b,"B")
n<-n+1
}
}
y<-readline(prompt = "請輸入西元年分\n")
print("閏年")
}
else{
print("平年")
}
y<-readline(prompt = "請輸入西元年分\n")
if (((y%%4==0)&&(y%%100!=0)) || (y%%400 ==0)){
print("閏年")
}
year<-readline(prompt = "請輸入西元年分\n")
year_num<-as.numeric(year)
if (((year_num%%4==0)&&(year_num%%100!=0)) || (year_num%%400 ==0)){
print("閏年")
}
# 猜數字遊戲
# 基本功能
# 1. 請寫一個由"電腦隨機產生"不同數字的四位數(1A2B遊戲)
# 2. 玩家可"重覆"猜電腦所產生的數字，並提示猜測的結果(EX:1A2B)
# 3. 一旦猜對，系統可自動計算玩家猜測的次數
# 額外功能：每次玩家輸入完四個數字後，檢查玩家的輸入是否正確(錯誤檢查)
ans<-sample(0:9,4)
guess<-c(0,0,0,0)
n<-0
while(all(guess==ans)==F){
x<-readline(prompt = "請輸入四個數字\n")
y<-unlist(strsplit(as.character(x),""))
guess<-as.numeric(y)
if((class(guess)!="numeric")||(length(y)!=4)||(y[1]==y[2])||(y[2]==y[3])||(y[3]==y[4])||(y[1]==y[3])||(y[2]==y[4])||(y[1]==y[4])){
print("INPUT ERROR QQ，請輸入四個不同數字")
next
}
else if(all(guess==ans)==T){
n<-n+1
cat("恭喜答對！共猜了",n,"次")
}
else{
a<-sum(guess==ans)
b<-0
for(i in 1:4){
if((guess[i]!=ans[i])&&((guess[i]-ans[1])*(guess[i]-ans[2])*(guess[i]-ans[3])*(guess[i]-ans[4])==0)){
b<-b+1
}
}
cat(a,"A",b,"B")
n<-n+1
}
}
year_num<-as.numeric(year)
for(i in 1){
if (((year_num%%4==0)&&(year_num%%100!=0)) || (year_num%%400 ==0)){
print("閏年")
}
else{
print("平年")
}
}
for(i in 1){
year<-readline(prompt = "請輸入西元年分\n")
year_num<-as.numeric(year)
if (((year_num%%4==0)&&(year_num%%100!=0)) || (year_num%%400 ==0)){
print("閏年")
}
else{
print("平年")
}
}
for(i in 1){
year<-readline(prompt = "請輸入西元年分\n")
year_num<-as.numeric(year)
if (((year_num%%4==0)&&(year_num%%100!=0)) || (year_num%%400 ==0)){
print("閏年")
}
else{
print("平年")
}
}
for(i in 1){
year<-readline(prompt = "請輸入西元年分\n")
year_num<-as.numeric(year)
if (((year_num%%4==0)&&(year_num%%100!=0)) || (year_num%%400 ==0)){
print("閏年")
}
else{
print("平年")
}
}
for(i in 1){
year<-readline(prompt = "請輸入西元年分\n")
year_num<-as.numeric(year)
if (((year_num%%4==0)&&(year_num%%100!=0)) || (year_num%%400 ==0)){
print("閏年")
}
else{
print("平年")
}
}
for(i in 1){
year<-readline(prompt = "請輸入西元年分\n")
year_num<-as.numeric(year)
if (((year_num%%4==0)&&(year_num%%100!=0)) || (year_num%%400 ==0)){
print("閏年")
}
else{
print("平年")
}
}
for(i in 1){
year<-readline(prompt = "請輸入西元年分\n")
year_num<-as.numeric(year)
if (((year_num%%4==0)&&(year_num%%100!=0)) || (year_num%%400 ==0)){
print("閏年")
}
else{
print("平年")
}
}
